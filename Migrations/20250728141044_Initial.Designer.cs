// <auto-generated />
using System;
using CoffeeShopApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoffeeShopApp.Migrations
{
    [DbContext(typeof(CoffeeShopContext))]
    [Migration("20250728141044_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("CoffeeShopApp.Models.Coffee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoastLevel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Coffees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 28, 14, 10, 43, 523, DateTimeKind.Utc).AddTicks(390),
                            Description = "Bright and floral with citrus notes",
                            IsAvailable = true,
                            Name = "Ethiopian Yirgacheffe",
                            Origin = "Ethiopia",
                            Price = 18.99m,
                            RoastLevel = "Light"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 28, 14, 10, 43, 523, DateTimeKind.Utc).AddTicks(931),
                            Description = "Rich and balanced with chocolate undertones",
                            IsAvailable = true,
                            Name = "Colombian Supremo",
                            Origin = "Colombia",
                            Price = 16.99m,
                            RoastLevel = "Medium"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 28, 14, 10, 43, 523, DateTimeKind.Utc).AddTicks(934),
                            Description = "Full-bodied with earthy and herbal flavors",
                            IsAvailable = true,
                            Name = "Sumatra Mandheling",
                            Origin = "Indonesia",
                            Price = 19.99m,
                            RoastLevel = "Dark"
                        });
                });

            modelBuilder.Entity("CoffeeShopApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 28, 14, 10, 43, 372, DateTimeKind.Utc).AddTicks(6343),
                            Email = "admin@coffeeshop.com",
                            PasswordHash = "$2a$11$XHGHjvl4v7IRzEKKij5jvuulnTX7dxmmW3PfpJGTeG/Lvdko3pWXi",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 28, 14, 10, 43, 521, DateTimeKind.Utc).AddTicks(167),
                            Email = "barista@coffeeshop.com",
                            PasswordHash = "$2a$11$dsJkPF6J6Q9YSYnIkwEs.ewhvZvDsFLLdSugraFLszFDlQuoiMHpG",
                            Username = "barista"
                        });
                });

            modelBuilder.Entity("CoffeeShopApp.Models.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Claims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "IsManager",
                            ClaimValue = "true",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "CanManageCoffee",
                            ClaimValue = "true",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "CanViewCoffee",
                            ClaimValue = "true",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "IsBarista",
                            ClaimValue = "true",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "CanViewCoffee",
                            ClaimValue = "true",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("CoffeeShopApp.Models.UserClaim", b =>
                {
                    b.HasOne("CoffeeShopApp.Models.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoffeeShopApp.Models.User", b =>
                {
                    b.Navigation("Claims");
                });
#pragma warning restore 612, 618
        }
    }
}
